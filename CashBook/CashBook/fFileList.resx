<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>